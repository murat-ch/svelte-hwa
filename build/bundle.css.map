{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "HowTo.svelte",
    "ProgressBar.svelte",
    "Timer.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import Timer from './Timer.svelte';\r\n    import HowTo from './HowTo.svelte';\r\n    let audio;\r\n    function timerEnds(e) {\r\n        audio.play();\r\n    }\r\n</script>\r\n<style>\r\n    h1,\r\n    h3 {\r\n        text-align: center;\r\n    }\r\n</style>\r\n\r\n<h1>Handwashing App</h1>\r\n<Timer on:end={timerEnds}/>\r\n<HowTo />\r\n\r\n<h3>\r\n    <a href=\"https://www.who.int/gpsc/clean_hands_protection/en/\">Picture source</a>\r\n</h3>\r\n\r\n<h3>\r\n    <a href=\"https://freesound.org/people/metrostock99/sounds/345086/\">Sound source</a>\r\n</h3>\r\n\r\n<audio bind:this={audio}>\r\n    <track kind=\"captions\">\r\n    <source src=\"./media/Oh_Yeah.wav\" />\r\n</audio>",
    "<style>\r\n    img {\r\n        width: 100%;\r\n    }\r\n</style>\r\n\r\n<div bp=\"grid\">\r\n    <img bp=\"offset-5@md 4@md 12@sm\" src=\"./media/handwash.gif\" alt=\"handwashing\">\r\n</div>",
    "<script>\r\n    export let progress = 0;\r\n</script>\r\n<style>\r\n    .progress-container {\r\n        margin: 20px 0;\r\n        border: solid rgb(194, 194, 194) 1px;\r\n    }\r\n    .progress-bar {\r\n        height: 30px;\r\n        background-color: rgb(77, 199, 55);\r\n    }\r\n</style>\r\n\r\n<div bp=\"grid\">\r\n    <div bp=\"offset-5@md 4@md 12@sm\" class=\"progress-container\">\r\n        <div class=\"progress-bar\" style=\"width: {progress}%\">\r\n            <span class=\"sr-only\">{progress}%</span>\r\n        </div>\r\n    </div>\r\n</div>",
    "<script>\r\n    import ProgressBar from './ProgressBar.svelte';\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    const totalSeconds = 20;\r\n    let secondLeft = totalSeconds;\r\n    let isRunning = false;\r\n    const dispatcher = createEventDispatcher();\r\n    function startTimer() {\r\n        isRunning = true;\r\n        let timer = setInterval(() => {\r\n            secondLeft = secondLeft - 1;\r\n            if (secondLeft === 0) {\r\n                clearInterval(timer);\r\n                isRunning = false;\r\n                secondLeft = totalSeconds;\r\n                dispatcher('end', \"end timer\");\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n</script>\r\n<style>\r\n    h2 {\r\n        margin: 0;\r\n    }\r\n    .start {\r\n        background-color: rgb(154, 73, 73);\r\n        width: 100%;\r\n        margin: 10px 0;\r\n    }\r\n    .start[disabled] {\r\n        background-color: rgb(194, 194, 194);\r\n        cursor: not-allowed;\r\n    }\r\n</style>\r\n<div bp=\"grid\">\r\n    <h2 bp=\"offset-5@md 4@md 12@sm\">\r\n        Seconds Left: {secondLeft}\r\n    </h2>\r\n</div>\r\n<ProgressBar progress=\"{(totalSeconds - secondLeft)*100/totalSeconds}\"/>\r\n<div bp=\"grid\">\r\n    <button class=\"start\" bp=\"offset-5@md 4@md 12@sm\" disabled={isRunning} on:click={startTimer}>\r\n        Start\r\n    </button>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AASI,gBAAE,CACF,EAAE,cAAC,CAAC,AACA,UAAU,CAAE,MAAM,AACtB,CAAC;ACXD,GAAG,aAAC,CAAC,AACD,KAAK,CAAE,IAAI,AACf,CAAC;ACCD,mBAAmB,eAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,AACxC,CAAC,AACD,aAAa,eAAC,CAAC,AACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,AACtC,CAAC;ACYD,EAAE,cAAC,CAAC,AACA,MAAM,CAAE,CAAC,AACb,CAAC,AACD,MAAM,cAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAAC,CAAC,AAClB,CAAC,AACD,MAAM,CAAC,QAAQ,CAAC,cAAC,CAAC,AACd,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,MAAM,CAAE,WAAW,AACvB,CAAC"
}